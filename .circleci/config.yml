version: 2.1
description: Test CCI conditionals

jobs:
  build:
    machine:
      image: ubuntu-2204:2022.07.1
    working_directory: /home/circleci/test_cci_conditionals
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Do build
          command: echo "Doing build"
      - run:
          name: Show params
          command: |
            echo << pipeline.id >>
            curl --request GET --url "https://circleci.com/api/v2/pipeline/<< pipeline.id >>/workflow"
      - run:
          name: Show Workflow ID
          command: |
            echo $CIRCLE_WORKFLOW_ID
      - run:
          name: Show pipelines
          command: |
            echo << pipeline.id >>
            curl --request GET --url "https://circleci.com/api/v2/pipeline" --header "authorization: Basic $CIRCLECI_TOKEN"

            # curl --request GET --url 'https://circleci.com/api/v2/pipeline?org-slug=gh/maxjeffos'
  
  test:
    machine:
      image: ubuntu-2204:2022.07.1
    working_directory: /home/circleci/test_cci_conditionals
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Do testing
          command: echo "Doing testing"

  prepare_release:
    machine:
      image: ubuntu-2204:2022.07.1
    working_directory: /home/circleci/test_cci_conditionals
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Do Prepare Release
          command: echo "Doing release preparation"

  actual_release:
    machine:
      image: ubuntu-2204:2022.07.1
    working_directory: /home/circleci/test_cci_conditionals
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Real Release Stuff
          command: echo "Doing the actual release stuff that we only want to do for a real release."

  approve_release:
    machine:
      image: ubuntu-2204:2022.07.1
    working_directory: /home/circleci/test_cci_conditionals
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Use API to approve latest pending release
          command: echo "Call API to approve latest pending release"
      - run:
          name: Show params
          command: |
            echo << pipeline.id >>
            curl --request GET --url "https://circleci.com/api/v2/pipeline/<< pipeline.id >>/workflow"
      - run:
          name: Show pipelines
          command: |
            echo << pipeline.id >>
            curl --request GET --url 'https://circleci.com/api/v2/pipeline?org-slug=gh/maxjeffos'

workflows:
  build_test_release:
    when:
      and:
        - equal: [ webhook, << pipeline.trigger_source >> ]  # don't want to run this workflow from the trigger/schedule
    jobs:
      - build
      - test:
          requires:
            - build 
      - prepare_release:
          requires:
            - test
      - should-release:
          name: Release?
          type: approval
          requires:
            - prepare_release
      - actual_release:
          requires:
            - Release?
          filters:
            branches:
              only:
                - main

  auto_approve:
    when:
      and:
        - equal: [ "main", << pipeline.git.branch >> ]
        - equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]  # these are built-in names
        - equal: [ "my-scheduled-release", << pipeline.schedule.name >> ]
    jobs:
      - approve_release:
          filters:
            branches:
              only:
                - main
